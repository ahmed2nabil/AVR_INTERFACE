
mychallenge.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000238  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000001  00800060  00800060  000002ac  2**0
                  ALLOC
  2 .stab         00000420  00000000  00000000  000002ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000006c0  00000000  00000000  000006cc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__vector_18>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a1 36       	cpi	r26, 0x61	; 97
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <main>
  74:	0c 94 1a 01 	jmp	0x234	; 0x234 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <__vector_18>:
 *      Author: nobol billy
 */
#include<avr/io.h>
#include<avr/interrupt.h>
unsigned char g_counter=0 ;
ISR(INT2_vect){
  7c:	1f 92       	push	r1
  7e:	0f 92       	push	r0
  80:	0f b6       	in	r0, 0x3f	; 63
  82:	0f 92       	push	r0
  84:	11 24       	eor	r1, r1
  86:	2f 93       	push	r18
  88:	8f 93       	push	r24
  8a:	9f 93       	push	r25
  8c:	af 93       	push	r26
  8e:	bf 93       	push	r27
  90:	ef 93       	push	r30
  92:	ff 93       	push	r31
  94:	df 93       	push	r29
  96:	cf 93       	push	r28
  98:	cd b7       	in	r28, 0x3d	; 61
  9a:	de b7       	in	r29, 0x3e	; 62

if(g_counter== 9){
  9c:	80 91 60 00 	lds	r24, 0x0060
  a0:	89 30       	cpi	r24, 0x09	; 9
  a2:	b1 f5       	brne	.+108    	; 0x110 <__vector_18+0x94>
	g_counter=0;
  a4:	10 92 60 00 	sts	0x0060, r1
	PORTC = (PORTC & 0xF0) | (g_counter & 0x0F);
  a8:	a5 e3       	ldi	r26, 0x35	; 53
  aa:	b0 e0       	ldi	r27, 0x00	; 0
  ac:	e5 e3       	ldi	r30, 0x35	; 53
  ae:	f0 e0       	ldi	r31, 0x00	; 0
  b0:	80 81       	ld	r24, Z
  b2:	98 2f       	mov	r25, r24
  b4:	90 7f       	andi	r25, 0xF0	; 240
  b6:	80 91 60 00 	lds	r24, 0x0060
  ba:	8f 70       	andi	r24, 0x0F	; 15
  bc:	89 2b       	or	r24, r25
  be:	8c 93       	st	X, r24
PORTB = (PORTB & 0b11111100) | (PORTC & 0b00000011);
  c0:	a8 e3       	ldi	r26, 0x38	; 56
  c2:	b0 e0       	ldi	r27, 0x00	; 0
  c4:	e8 e3       	ldi	r30, 0x38	; 56
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	80 81       	ld	r24, Z
  ca:	98 2f       	mov	r25, r24
  cc:	9c 7f       	andi	r25, 0xFC	; 252
  ce:	e5 e3       	ldi	r30, 0x35	; 53
  d0:	f0 e0       	ldi	r31, 0x00	; 0
  d2:	80 81       	ld	r24, Z
  d4:	83 70       	andi	r24, 0x03	; 3
  d6:	89 2b       	or	r24, r25
  d8:	8c 93       	st	X, r24
PORTB = (PORTB & 0b00111111) | (PORTC << 4 | (PORTC & 0b11000000) );
  da:	a8 e3       	ldi	r26, 0x38	; 56
  dc:	b0 e0       	ldi	r27, 0x00	; 0
  de:	e8 e3       	ldi	r30, 0x38	; 56
  e0:	f0 e0       	ldi	r31, 0x00	; 0
  e2:	80 81       	ld	r24, Z
  e4:	28 2f       	mov	r18, r24
  e6:	2f 73       	andi	r18, 0x3F	; 63
  e8:	e5 e3       	ldi	r30, 0x35	; 53
  ea:	f0 e0       	ldi	r31, 0x00	; 0
  ec:	80 81       	ld	r24, Z
  ee:	88 2f       	mov	r24, r24
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	82 95       	swap	r24
  f4:	92 95       	swap	r25
  f6:	90 7f       	andi	r25, 0xF0	; 240
  f8:	98 27       	eor	r25, r24
  fa:	80 7f       	andi	r24, 0xF0	; 240
  fc:	98 27       	eor	r25, r24
  fe:	98 2f       	mov	r25, r24
 100:	e5 e3       	ldi	r30, 0x35	; 53
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	80 81       	ld	r24, Z
 106:	80 7c       	andi	r24, 0xC0	; 192
 108:	89 2b       	or	r24, r25
 10a:	82 2b       	or	r24, r18
 10c:	8c 93       	st	X, r24
 10e:	38 c0       	rjmp	.+112    	; 0x180 <__vector_18+0x104>
}
else
{
	g_counter++;
 110:	80 91 60 00 	lds	r24, 0x0060
 114:	8f 5f       	subi	r24, 0xFF	; 255
 116:	80 93 60 00 	sts	0x0060, r24
PORTC = (PORTC & 0xF0) | (g_counter & 0x0F);
 11a:	a5 e3       	ldi	r26, 0x35	; 53
 11c:	b0 e0       	ldi	r27, 0x00	; 0
 11e:	e5 e3       	ldi	r30, 0x35	; 53
 120:	f0 e0       	ldi	r31, 0x00	; 0
 122:	80 81       	ld	r24, Z
 124:	98 2f       	mov	r25, r24
 126:	90 7f       	andi	r25, 0xF0	; 240
 128:	80 91 60 00 	lds	r24, 0x0060
 12c:	8f 70       	andi	r24, 0x0F	; 15
 12e:	89 2b       	or	r24, r25
 130:	8c 93       	st	X, r24
PORTB = (PORTB & 0b11111100) | (PORTC & 0b00000011);
 132:	a8 e3       	ldi	r26, 0x38	; 56
 134:	b0 e0       	ldi	r27, 0x00	; 0
 136:	e8 e3       	ldi	r30, 0x38	; 56
 138:	f0 e0       	ldi	r31, 0x00	; 0
 13a:	80 81       	ld	r24, Z
 13c:	98 2f       	mov	r25, r24
 13e:	9c 7f       	andi	r25, 0xFC	; 252
 140:	e5 e3       	ldi	r30, 0x35	; 53
 142:	f0 e0       	ldi	r31, 0x00	; 0
 144:	80 81       	ld	r24, Z
 146:	83 70       	andi	r24, 0x03	; 3
 148:	89 2b       	or	r24, r25
 14a:	8c 93       	st	X, r24
PORTB = (PORTB & 0b00111111) | (PORTC << 4 | (PORTC & 0b11000000) );
 14c:	a8 e3       	ldi	r26, 0x38	; 56
 14e:	b0 e0       	ldi	r27, 0x00	; 0
 150:	e8 e3       	ldi	r30, 0x38	; 56
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	80 81       	ld	r24, Z
 156:	28 2f       	mov	r18, r24
 158:	2f 73       	andi	r18, 0x3F	; 63
 15a:	e5 e3       	ldi	r30, 0x35	; 53
 15c:	f0 e0       	ldi	r31, 0x00	; 0
 15e:	80 81       	ld	r24, Z
 160:	88 2f       	mov	r24, r24
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	82 95       	swap	r24
 166:	92 95       	swap	r25
 168:	90 7f       	andi	r25, 0xF0	; 240
 16a:	98 27       	eor	r25, r24
 16c:	80 7f       	andi	r24, 0xF0	; 240
 16e:	98 27       	eor	r25, r24
 170:	98 2f       	mov	r25, r24
 172:	e5 e3       	ldi	r30, 0x35	; 53
 174:	f0 e0       	ldi	r31, 0x00	; 0
 176:	80 81       	ld	r24, Z
 178:	80 7c       	andi	r24, 0xC0	; 192
 17a:	89 2b       	or	r24, r25
 17c:	82 2b       	or	r24, r18
 17e:	8c 93       	st	X, r24
}
}
 180:	cf 91       	pop	r28
 182:	df 91       	pop	r29
 184:	ff 91       	pop	r31
 186:	ef 91       	pop	r30
 188:	bf 91       	pop	r27
 18a:	af 91       	pop	r26
 18c:	9f 91       	pop	r25
 18e:	8f 91       	pop	r24
 190:	2f 91       	pop	r18
 192:	0f 90       	pop	r0
 194:	0f be       	out	0x3f, r0	; 63
 196:	0f 90       	pop	r0
 198:	1f 90       	pop	r1
 19a:	18 95       	reti

0000019c <INT2_Init>:
void INT2_Init(void){
 19c:	df 93       	push	r29
 19e:	cf 93       	push	r28
 1a0:	cd b7       	in	r28, 0x3d	; 61
 1a2:	de b7       	in	r29, 0x3e	; 62
	SREG &= ~(1<<7);
 1a4:	af e5       	ldi	r26, 0x5F	; 95
 1a6:	b0 e0       	ldi	r27, 0x00	; 0
 1a8:	ef e5       	ldi	r30, 0x5F	; 95
 1aa:	f0 e0       	ldi	r31, 0x00	; 0
 1ac:	80 81       	ld	r24, Z
 1ae:	8f 77       	andi	r24, 0x7F	; 127
 1b0:	8c 93       	st	X, r24
DDRD &= (~(1<<PD2));
 1b2:	a1 e3       	ldi	r26, 0x31	; 49
 1b4:	b0 e0       	ldi	r27, 0x00	; 0
 1b6:	e1 e3       	ldi	r30, 0x31	; 49
 1b8:	f0 e0       	ldi	r31, 0x00	; 0
 1ba:	80 81       	ld	r24, Z
 1bc:	8b 7f       	andi	r24, 0xFB	; 251
 1be:	8c 93       	st	X, r24
	GICR |= (1<<INT2);
 1c0:	ab e5       	ldi	r26, 0x5B	; 91
 1c2:	b0 e0       	ldi	r27, 0x00	; 0
 1c4:	eb e5       	ldi	r30, 0x5B	; 91
 1c6:	f0 e0       	ldi	r31, 0x00	; 0
 1c8:	80 81       	ld	r24, Z
 1ca:	80 62       	ori	r24, 0x20	; 32
 1cc:	8c 93       	st	X, r24
	MCUCSR |=(1<<ISC2);
 1ce:	a4 e5       	ldi	r26, 0x54	; 84
 1d0:	b0 e0       	ldi	r27, 0x00	; 0
 1d2:	e4 e5       	ldi	r30, 0x54	; 84
 1d4:	f0 e0       	ldi	r31, 0x00	; 0
 1d6:	80 81       	ld	r24, Z
 1d8:	80 64       	ori	r24, 0x40	; 64
 1da:	8c 93       	st	X, r24
	SREG |=(1<<7);
 1dc:	af e5       	ldi	r26, 0x5F	; 95
 1de:	b0 e0       	ldi	r27, 0x00	; 0
 1e0:	ef e5       	ldi	r30, 0x5F	; 95
 1e2:	f0 e0       	ldi	r31, 0x00	; 0
 1e4:	80 81       	ld	r24, Z
 1e6:	80 68       	ori	r24, 0x80	; 128
 1e8:	8c 93       	st	X, r24
}
 1ea:	cf 91       	pop	r28
 1ec:	df 91       	pop	r29
 1ee:	08 95       	ret

000001f0 <main>:
int main (){
 1f0:	df 93       	push	r29
 1f2:	cf 93       	push	r28
 1f4:	cd b7       	in	r28, 0x3d	; 61
 1f6:	de b7       	in	r29, 0x3e	; 62
	DDRC |= 0x0F;
 1f8:	a4 e3       	ldi	r26, 0x34	; 52
 1fa:	b0 e0       	ldi	r27, 0x00	; 0
 1fc:	e4 e3       	ldi	r30, 0x34	; 52
 1fe:	f0 e0       	ldi	r31, 0x00	; 0
 200:	80 81       	ld	r24, Z
 202:	8f 60       	ori	r24, 0x0F	; 15
 204:	8c 93       	st	X, r24
	PORTC &= 0xF0;
 206:	a5 e3       	ldi	r26, 0x35	; 53
 208:	b0 e0       	ldi	r27, 0x00	; 0
 20a:	e5 e3       	ldi	r30, 0x35	; 53
 20c:	f0 e0       	ldi	r31, 0x00	; 0
 20e:	80 81       	ld	r24, Z
 210:	80 7f       	andi	r24, 0xF0	; 240
 212:	8c 93       	st	X, r24
	DDRB |= (1<<PB0) |(1<<PB1)|(1<<PB6)|(1<<PB7);
 214:	a7 e3       	ldi	r26, 0x37	; 55
 216:	b0 e0       	ldi	r27, 0x00	; 0
 218:	e7 e3       	ldi	r30, 0x37	; 55
 21a:	f0 e0       	ldi	r31, 0x00	; 0
 21c:	80 81       	ld	r24, Z
 21e:	83 6c       	ori	r24, 0xC3	; 195
 220:	8c 93       	st	X, r24
	PORTB &= ~(1<<PB0) | ~(1<<PB1)| ~(1<<PB6)| ~(1<<PB7);
 222:	a8 e3       	ldi	r26, 0x38	; 56
 224:	b0 e0       	ldi	r27, 0x00	; 0
 226:	e8 e3       	ldi	r30, 0x38	; 56
 228:	f0 e0       	ldi	r31, 0x00	; 0
 22a:	80 81       	ld	r24, Z
 22c:	8c 93       	st	X, r24


INT2_Init();
 22e:	0e 94 ce 00 	call	0x19c	; 0x19c <INT2_Init>
 232:	ff cf       	rjmp	.-2      	; 0x232 <main+0x42>

00000234 <_exit>:
 234:	f8 94       	cli

00000236 <__stop_program>:
 236:	ff cf       	rjmp	.-2      	; 0x236 <__stop_program>
